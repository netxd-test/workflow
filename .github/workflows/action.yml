name: Auto Tag on Commit

on:
  push:
    branches:
      - QA

jobs:
  build_MINOR_RELEASE:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'MINOR_RELEASE')
    steps:

      - name: Set up Environment Variables
        run: |
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN2 }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          token: ${{ secrets.BOT_TOKEN2 }}

      - name: Generate Git Tag
        id: generate_tag
        run: |
          # Find the latest tag if available
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "")
          echo "Latest tag: $LATEST_TAG"

          #Find Branch_Name

          Branch_Name="qa"
          echo "Branch Name:$Branch_Name"

          if [ -z "$LATEST_TAG" ]; then
            # If no tags found, start with initial version and branch name
            NEW_TAG="v0.0.0_$Branch_Name"
          else
            # Extract the version number and branch name from the latest tag
            VERSION_BRANCH=$(echo "$LATEST_TAG" | cut -d'_' -f1)
            VERSION=$(echo "$VERSION_BRANCH" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
            BRANCH_NAME=$(echo "$LATEST_TAG" | cut -d'_' -f2)

            # Increment the version number
            NEW_VERSION=$(echo "$VERSION" | awk -F'.' '{print $1 "." $2 + 1 ".0"}')

            # Construct the new tag
            NEW_TAG="v${NEW_VERSION}_$Branch_Name"
          fi

          echo "Generated new tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Push Git Tag
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN2 }}
        run: |
          git config user.name "Abisheck2002"
          git config user.email "abisheck.g@netxd.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG

  build_MAJOR_RELEASE:

            runs-on: ubuntu-latest
            if: contains(github.event.head_commit.message, 'MAJOR_RELEASE')
            steps:
              - name: Set up Environment Variables
                run: |
                  echo "BOT_TOKEN=${{ secrets.BOT_TOKEN2 }}" >> $GITHUB_ENV
              - name: Checkout repository
                uses: actions/checkout@v4
                with:
                  fetch-depth: '0'
                  token: ${{ secrets.BOT_TOKEN2 }}
        
              - name: Generate Git Tag
                id: generate_tag
                run: |
                  # Find the latest tag if available
                  LATEST_TAG=$(git describe --tags --abbrev=0 || echo "")
                  echo "Old tag: $LATEST_TAG"

                  #Find Branch_Name

                  Branch_Name="qa"
                  echo "Branch Name:$Branch_Name"
        
                  if [ -z "$LATEST_TAG" ]; then
                    # If no tags found, start with initial version and branch name
                    NEW_TAG="v0.0.0_$Branch_Name"
                  else
                    # Extract the version number and branch name from the latest tag
                    VERSION_BRANCH=$(echo "$LATEST_TAG" | cut -d'_' -f1)
                    VERSION=$(echo "$VERSION_BRANCH" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
                    BRANCH_NAME=$(echo "$LATEST_TAG" | cut -d'_' -f2)
        
                    # Increment the version number
                    NEW_VERSION=$(echo "$VERSION" | awk -F'.' '{print $1 +1 "." $2 ".0"}')
        
                    # Construct the new tag
                    NEW_TAG="v${NEW_VERSION}_$Branch_Name"
                  fi
        
                  echo "Generated new tag: $NEW_TAG"
                  echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
        
              - name: Push Git Tag
                env:
                  BOT_TOKEN: ${{ secrets.BOT_TOKEN2 }}
                run: |
                  git config user.name "Abisheck2002"
                  git config user.email "abisheck.g@netxd.com"
                  git tag $NEW_TAG
                  git push origin $NEW_TAG
        

  build_no_release:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'MINOR_RELEASE') && !contains(github.event.head_commit.message, 'MAJOR_RELEASE') }}

    steps:
   
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          token: ${{ secrets.BOT_TOKEN2 }}        
     
      - name: Generate Git Tag
        id: generate_tag
        run: |
          # Find the latest tag if available
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "")
          echo "Old tag: $LATEST_TAG"

          #Find Branch_Name

          Branch_Name="qa"
          echo "Branch Name:$Branch_Name"

          if [ -z "$LATEST_TAG" ]; then
            # If no tags found, start with initial version and branch name
            NEW_TAG="v0.0.0_$Branch_Name"
          else
            # Extract the version number and branch name from the latest tag
            VERSION_BRANCH=$(echo "$LATEST_TAG" | cut -d'_' -f1)
            VERSION=$(echo "$VERSION_BRANCH" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
            BRANCH_NAME=$(echo "$LATEST_TAG" | cut -d'_' -f2)

            # Increment the version number
            NEW_VERSION=$(echo "$VERSION" | awk -F'.' '{print $1 "." $2 "." $3 + 1}')

            # Construct the new tag
            NEW_TAG="v${NEW_VERSION}_$Branch_Name"
          fi

          echo "Generated new tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Push Git Tag
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN2 }}
        
        run: |
  
          git config user.name "Abisheck2002"
          git config user.email "abisheck.g@netxd.com"
          git tag $NEW_TAG          
          git push origin --tags >/dev/null 2>&1
